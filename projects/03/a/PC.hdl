// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
        // DFF(in=mout, out=out1); out(t) = in(t-1);
        And16(a[0..15]=false, b[0..15]=false, out=zero);
        Inc16(in=regout, out=pout);
        Mux16(a=zero, b=pout, sel=inc, out=incout);
        Mux16(a=incout, b=in, sel=load, out=loadout);
        Mux16(a=loadout, b=zero, sel=reset, out=rout);
        Or(a=load, b=reset, out=loadorreset);
        Or(a=loadorreset, b=inc, out=loadflag);
        Register(in=rout, load=loadflag, out=regout);
        Or16(a=regout, b=regout, out=out);
    // Put your code here:
}
